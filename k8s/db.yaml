apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: demo_user
            - name: POSTGRES_PASSWORD
              value: demo_pass
            - name: POSTGRES_DB
              value: demo_db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-init
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: init-db
          image: postgres:15-alpine
          env:
            - name: PGPASSWORD
              value: demo_pass
          command:
            - sh
            - -c
            - |
              echo "Waiting for Postgres..."
              sleep 10
              psql -h postgres -U demo_user -d demo_db <<'EOF'
              -- Tạo bảng users
              CREATE TABLE IF NOT EXISTS users (
                  id SERIAL PRIMARY KEY,
                  name TEXT NOT NULL,
                  balance BIGINT NOT NULL DEFAULT 0
              );

              -- Tạo bảng transactions
              CREATE TABLE IF NOT EXISTS transactions (
                  id SERIAL PRIMARY KEY,
                  from_user TEXT NOT NULL,
                  to_user   TEXT NOT NULL,
                  amount BIGINT NOT NULL
              );

              -- Dữ liệu mẫu cho users
              INSERT INTO users (name, balance) VALUES
              ('Alice', 1000),
              ('Bob', 500),
              ('Charlie', 200)
              ON CONFLICT DO NOTHING;

              -- Dữ liệu mẫu cho transactions
              INSERT INTO transactions (from_user, to_user, amount) VALUES
              ('1', '2', 200),
              ('2', '3', 100),
              ('1', '3', 50)
              ON CONFLICT DO NOTHING;
              EOF
